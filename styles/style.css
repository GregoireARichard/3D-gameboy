/*NOTICE: i'll be using the code from the twelfth lesson "CSS cube" in order to assimilate it 
Also, few things i'll do to keep my code constant : 
- Use of American English
- The colors will be given in hexadecimal values, or with variables who contain hexadecimal values
- no semicolon in JS
- VW/VH & px for the sizes.
*/

:root{
    --mainColor:#2B2E35;
    --secondaryColor: #dddddd;
    --gameBoy:#F0EDEE;
    --mainLight:#53F4B1;
    --secondaryLight:#F5414B;
    --effect: hover 1s linear;

}
html{
    overflow-x:hidden;
}
body{
    background: #ffffff;
    margin:0;
}
/*LOADER SECTION*/
/*thanks to @CurlyWebDev made this codePen(https://codepen.io/curley/pen/PoYyWYO) who helped me a lot doing the loader*/
.loader{
    width: 100vw;
    height: 100vh;
    background: var(--gameBoy);
    display:block;
}
.loadingContent{
    width: 40vw;
    margin:0 auto;
}
p.loadingText{
    margin-top:300px;
    display:inline-block;
    text-align: center;
    font-family: 'Lexend Tera', sans-serif;
    font-size:50px;
    color:var(--gameBoy);
    -webkit-text-stroke: 2px var(--gameBoy);
}
p.loadingText:nth-child(1){
    animation: var(--effect);
}
p.loadingText:nth-child(2){
    animation: var(--effect) .125s;
}
p.loadingText:nth-child(3){
    animation: var(--effect) .25s;
}
p.loadingText:nth-child(4){
    animation: var(--effect) .375s;
}
p.loadingText:nth-child(5){
    animation: var(--effect) .5s;
}
p.loadingText:nth-child(6){
    animation: var(--effect) .675s;
}
p.loadingText:nth-child(7){
    animation: var(--effect) .75s;
}
p.loadingText:nth-child(8){
    animation: var(--effect) .80s;
}
p.loadingText:nth-child(9){
    animation: var(--effect) .85s;
}
p.loadingText:nth-child(10){
    animation: var(--effect) .9s;
}
p.loadingText:nth-child(11){
    animation: var(--effect) .925s;
}
p.loadingText:nth-child(12){
    animation: var(--effect) .950s;
}
@keyframes hover {
    0% {
   
      color: #121212;
      -webkit-text-stroke: 2px var(--gameBoy);
      opacity:1;
    }
  
    20% {
      color: var(--mainLight);
      -webkit-text-stroke: 3px var(--secondaryLight);
      filter: drop-shadow(0 0 1px #000000)drop-shadow(0 0 1px #000000)drop-shadow(0 0 3px var(--secondaryLight))drop-shadow(0 0 5px var(--secondaryLight))hue-rotate(10turn);
      opacity:0.75;
    }
  
    50% {
  
      color:var(--mainColor);
      -webkit-text-stroke: 2px var(--gameBoy);
      opacity:0.5;
    }
    100%{
        opacity:0;
    }
    
  }
  /*MODAL SECTION*/
  .modal{
    display:none;
    position:fixed;
    z-index:1;
    padding-top: 100px;
    top:0;
    left:0;
    width: 100vw;
    height: 100vw;
    background-color : #00000066;
}
.modal-content{
    margin:auto;
    padding: 20px;
    border: 1px solid #888;
    width: 50vw;
    height: 45vh;
    background-color:#f2e7e6;
    clip-path: polygon(74% 0, 74% 83%, 51% 100%, 0 100%, 0 0);
    border-radius:20px;
    font-family: 'Lexend Tera', sans-serif;
    font-size: 12px;

}
.enableExperience{
    width: 250px;
    height: 40px;
    color:var(--secondaryColor);
    background: var(--mainColor);
    border:1px solid #000000;

}
.pageContent{
    display: none;
}
.close:hover{
    cursor: pointer;
}

/*3D scene section*/
.scene{
    width: 100vw;
    height: 100vh;
    background:var(--mainColor);

}
.cube{
    position: absolute;
    top: 50%;
    left:50%;
    perspective: 800px;
}
.cube * {
    transform-style: preserve-3d;
}
.cube .shadow{
    position: absolute;
    top: -400px;
    left: -400px;
    width: 800px;
    height: 800px;
    transform: rotateX(-90deg) translateZ(201px) rotateX(180deg);
    backface-visibility:hidden;
}
.face{
    position: absolute;
    top: -200px;
    left: -200px;
    width: 300px;
    height: 400px;
    background:var(--gameBoy);
    color:#ffffff;
    background-size:cover;
}
.z-pos, .z-neg{
    clip-path: polygon(74% 0, 74% 83%, 51% 100%, 0 100%, 0 0);
    border-radius:20px;
    height: 395px;
}
.x-pos{
    width:30px;
    height:300px;
    border-radius:20px;
}
.x-neg{
    width: 38px;
    height: 380px;
    margin-top:10px;
    border-radius:20px;
}
.screen{
    background-color:#000000;
    clip-path: polygon(83% 0, 83% 48%, 56% 68%, 0 68%, 0 0);
    position: absolute;
    top: 10px;
    left: 5px;
    width: 250px;
    height: 300px;
    backface-visibility:hidden;
    border-radius:30px; 
}
/*Typewriter effect. Thanks to Thiago Teles Pereira and his codePen: https://codepen.io/thiagoteles/pen/ogoxLw really helped doing this*/
.writtenContent{
    position: absolute;
    left:5px;
    top:20px;
    width:200px;
    height: 25px;
    background:#000000;
    font-family: 'Lexend Tera', sans-serif;
    text-align: center;
}
.titleAnim{
    margin: 0 auto;
    border-right: 2px solid #ffffff;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    transform: translateY(-50%);
    color:#00FF00; 
    font-size:7px;
}
.typeWritter{
    animation: typewriter 3s steps(34) 1s 1 normal both, blinkTextCursor 400ms steps(34) infinite normal;
}
.paragraphI{
    display:none;
    margin: 0 auto;
    border-right: 2px solid #ffffff;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    transform: translateY(-50%);
    color:#00FF00; 
    font-size:7px;
}
p[class^="paragraphI"]{
    display:none;
}
.whiteText{
    border:1px solid var(--gameBoy);
    font-size: 7px;
}
.menuParagraph{
    display: none;
    border:none;
}
p[class^="language"]{
    display: none;
}
.languageText{
    color:#00FF00;
    border:none;
}
.languageText:hover{
    cursor:pointer;
}
.shutDown{
    display:none;
    color:#00FF00;
}
.toShutDown{
    font-size:7px;
    display:none;
}
@keyframes typewriter{
    from{width:0;}
    to{width:200px;}
}
@keyframes blinkTextCursor{
    from{border-right-color:#ffffff;}
    to{border-right-color:transparent;}
}
.flex{
    position: absolute;
    top:56%;
    left:5%;
    font-family: 'Roboto', sans-serif;
}
.circleButton{
    position: absolute;
    top: 250px;
    left: 10px;
    width: 75px;
    height: 75px;
    border:1px solid var(--mainColor);
    backface-visibility:hidden;
    border-radius: 50%;
    background: var(--secondaryColor);
    box-shadow: inset 20px 20px 60px #ccc9ca, 
            inset -20px -20px 60px #ffffff;
}
.oblique{
    transform: skew(0.08turn, 320deg);
    position: absolute;
    top: 250px;
    left: 150px;
    width:50px;
    height:20px;
    border-radius:50px;
    background: var(--secondaryColor);
    border:1px solid var(--mainColor);
}
 .obliqueBtn{
    border-radius: 50%;
    width:20px;
    height: 20px;   
    text-align: center;
    box-shadow: inset 20px 20px 60px #ccc9ca, 
                inset -20px -20px 60px #ffffff;
} 
.start{
    transform: rotate(270deg);
    position: absolute;
    top: 20px;
    left: -55px;
    width:7px;
    height:15px;
    border-radius:50px;
    background: var(--gameBoy);
    border:1px solid var(--mainColor);
}
.select{
    transform: rotate(270deg);
    position: absolute;
    top: 40px;
    left: -25px;
    width:7px;
    height:15px;
    border-radius:50px;
    background: var(--gameBoy);
    border:1px solid var(--mainColor);
}
p[class^="pS"]{
    color:var(--mainColor);
    transform:rotate(85deg);
    font-size:5px;
    font-family: 'Roboto', sans-serif;
    position: absolute;
    top:1px;
    left:-12px;
}
.smallLight{
    position: absolute;
    top:1px;
    left:20px;
    background-color:var(--mainLight);
    height:10px;
    width:5px;
}
p[class^="touchBtn"]{
    position: absolute;
    font-weight:bold;
    color:var(--mainColor);
}
.touchBtnTop{
    left:47%;
    top:-13%;
}
.touchBtnBottom{
    left:47%;
    top:40%;
}
.touchBtnRight{
    left:80%;
    top:5%;
}
.touchBtnLeft{
    left:10%;
    top:5%;
}
.face.x-pos{transform: rotateY(90deg) translateZ(195px);}
.face.x-neg {transform: rotateY(-90deg) translateZ(20px);}
.face.z-pos {transform: rotateY(0deg) translateZ(-20px);}
.face.z-neg {transform: rotateY(360deg) translateZ(15px);}
.screen{transform: rotateY(360deg) translateZ(15px);}
.circleButton{transform: rotateY(360deg) translateZ(15px);}
